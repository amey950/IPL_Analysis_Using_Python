
1) total matches : 816

print(df_p['id'].nunique())
----------------------------------------------------------------------------------------------------
2) find the unique teams which are present in data set

print(df_p['batting_team'].unique())
----------------------------------------------------------------------------------------------------
3) create special different data frame containing boundry runs only

df_p['batsman_runs'].between(4,6)
----------------------------------------------------------------------------------------------------
4) how many boundry i.e 4s and 6s are there in entire data set

df_p['batsman_runs'].between(4,6)
df_p.shape[0]
----------------------------------------------------------------------------------------------------
5) give the top 5 batsman and their total boundry count

aa = df_p[df_p['batsman_runs'].between(4,6)]
aa.value_counts('batsman').head(5)

CH Gayle     733
V Kohli      706
DA Warner    706
S Dhawan     702
SK Raina     688

----------------------------------------------------------------------------------------------------
6) find the team which has scored maximum boundries and fetch top 5

aa = df_p[df_p['batsman_runs'].between(4,6)]
aa.value_counts('batting_team').head(5)

Mumbai Indians                 4045
Royal Challengers Bangalore    3734
Kings XI Punjab                3705
Kolkata Knight Riders          3648
Chennai Super Kings            3429
----------------------------------------------------------------------------------------------------
7)find the top 10 batsman with highest runs

aa = df_p.groupby('batsman')['batsman_runs'].sum()
aa.sort_values(ascending = False).head(10)
----------------------------------------------------------------------------------------------------
8) give the top 5 bowlers with highrest wickets

aa = df_p[df_p['is_wicket'] == 1]
aa.value_counts('bowler').head(5)
----------------------------------------------------------------------------------------------------
9) give the most expensive bowlers in terms of boundries

aa = df_p[df_p['batsman_runs'].between(4,6)]
bb = aa.value_counts('bowler') ;
bb

UT Yadav            510
PP Chawla           498
DJ Bravo            444
P Kumar             443
Harbhajan Singh     431
----------------------------------------------------------------------------------------------------
10) different types of ways batsman got out

a = df_p.value_counts('dismissal_kind')
a.head(5)

caught                     5743
bowled                     1700
run out                     893
lbw                         571
stumped                     294
----------------------------------------------------------------------------------------------------
11) FIND THE 3 TEAMS AGAINST WHICH VIRAT KOHLI HAS SCORED HIGHEST RUNS

df_p[df_p['batsman'] == 'V Kohli']
df_p.groupby('bowling_team')['batsman_runs'].sum().sort_values(ascending = False).head(3)

Mumbai Indians                 29442
Royal Challengers Bangalore    28926
Kings XI Punjab                28860

----------------------------------------------------------------------------------------------------

12) FIND THE PLAYERS WHO HAVE SCORED CENTURY ALSO POST THE SCORES

a = df_p.groupby(['id','batsman','date'])['batsman_runs'].sum()
a[a.values >= 100].sort_values(ascending =  False)

----------------------------------------------------------------------------------------------------

13) FIND THE TOP 5 BOWLERS WHO HAVE GIVEN MOST EXTRA RUNS

a = df_p[df_p['extra_runs'].between (1,6)]
a.value_counts('bowler').head(5)

SL Malinga    220
UT Yadav      185
P Kumar       185
DJ Bravo      185
B Kumar       166
----------------------------------------------------------------------------------------------------

Q) WHICH TEAM HAS GIVEN HIGHEST NUMBER OF BOUNDRIES GIVE TOP 5 TEAMS AND THEIR COUNT OF BOUNDRIES 

a = df_p[(df_p['total_runs'] == 6 )| (df_p['total_runs'] == 4)]
a.value_counts('bowling_team').head(5)

Kings XI Punjab                3832
Mumbai Indians                 3786
Royal Challengers Bangalore    3761
Kolkata Knight Riders          3605
Chennai Super Kings            3306

----------------------------------------------------------------------------------------------------

Q) FIND THE NUMBER OF GAMES PLAYED BY CSK I.E. , Chennai Super Kings

a = df_p[df_p['batting_team'] == 'Chennai Super Kings']
a['id'].nunique()

ans : 178 games
----------------------------------------------------------------------------------------------------

Q) FIND NAMES OF ALL THE TEAMS PLAYING IN THE IPL 

a = df_p['batting_team']
a.unique()

----------------------------------------------------------------------------------------------------

Q) TOP 10 INNINGS OF VIRAT KOHLI , SCORE AND BOWLING TEAM 

a = df_p[df_p['batsman'] == 'V Kohli']
b = a.groupby(['id', 'batsman', 'bowling_team'])['batsman_runs'].sum().sort_values(ascending = False).head(10)

980999   V Kohli  Kings XI Punjab            113
980987   V Kohli  Gujarat Lions              109
980969   V Kohli  Rising Pune Supergiants    108
980937   V Kohli  Gujarat Lions              100
1178410  V Kohli  Kolkata Knight Riders      100
598054   V Kohli  Delhi Daredevils            99
598048   V Kohli  Sunrisers Hyderabad         93
1136574  V Kohli  Mumbai Indians              92
1216525  V Kohli  Chennai Super Kings         90
1175372  V Kohli  Kolkata Knight Riders       84

----------------------------------------------------------------------------------------------------

Q) FIND THE AVERAGE OF V KOHLI

aa = df_p[df_p['batsman'] == 'V Kohli']
matches = aa['id'].nunique()
runs = aa['batsman_runs'].sum()

print(runs/matches)   /* IT IS 31.5 */ 
----------------------------------------------------------------------------------------------------

Q) FIND THE MEDIAN  OF THE V KOHLI'S RUNS

import numpy as np
a = df_p[df_p['batsman'] == 'V Kohli']       /* masking aka filtering */ 
b = a.groupby(['id','batsman'])['batsman_runs'].sum()    /* grouping by */ 
z = b.values               /* series data type and considering values */
print(np.median(z))     /* printing the median */ 

----------------------------------------------------------------------------------------------------

Q) WHICH BOWLING TEAM HAS GIVEN HIGHEST 6s PICK TOP 5

aa = df_p[(df_p['batsman_runs'] == 6) | (df_p['batsman_runs'] == 4)]
aa.value_counts('bowling_team').head(5)

Kings XI Punjab                3807
Mumbai Indians                 3752
Royal Challengers Bangalore    3729
Kolkata Knight Riders          3577
Chennai Super Kings            3283

----------------------------------------------------------------------------------------------------
Q) FIND THE TOTAL RUNS SCORED BY  V Kohli

aa = df_p.groupby(['batsman'])['batsman_runs'].sum().sort_values(ascending = False)
aa['V Kohli']

/* here in 2nd line you can replace name of any player and answer will be present */

--------------------------------------------------------------------------------------

Q)  WRITE A CODE TO FIND THE HOW MANY TIME KOHLI HAS SCORED MORE THAN 90 RUNS

aa = df_p.groupby(['batsman','id'])['batsman_runs'].sum()
k = aa['V Kohli']
k[k.values > 90].count()

/* HERE WE CAN CHANGE THE NAME OF BATSMAN AND CHANGE THE SCORE , IT IS JUST REPLACEMENT IN ABOVE CODE */ 

-------------------------------------------------------------------------------------

Q) WRITE A QUERY TO FIND BATSMAN AND NUMBER OF CENTURIES SCORED.

a = df_p.groupby(['id','batsman','date'])['batsman_runs'].sum()
b = a[a.values >= 100].sort_values(ascending =  False)
b.to_frame(name=None).value_counts('batsman').head(5)

CH Gayle            6
V Kohli             5
DA Warner           4
SR Watson           4
AB de Villiers      3

-------------------------------------------------------------------------------------

Q) WRITE A QUERY TO FIND THE 5 TYPES OF GETTING OUT

df_p['dismissal_type].value_counts().head(5)
-------------------------------------------------------------------------------------
Q) FIND THE TOP 5 PLAYERS WHO GOT OUT BY RUN-OUT 

df_p[df_p['dismissal_kind'] == 'run out'].value_counts('batsman').head(10)

MS Dhoni      22
RG Sharma     20
KD Karthik    17
S Dhawan      15
V Kohli       15
-------------------------------------------------------------------------------------

Q) FIND THE TOP 10 SCORES BY TEAM IN AN INNINGS

a = df_p.groupby(['id','inning','batting_team'])['total_runs'].sum()
b = a[a.values >= 200].sort_values(ascending =  False)
b.head(5)

598027   1       Royal Challengers Bangalore    263
980987   1       Royal Challengers Bangalore    248
419137   1       Chennai Super Kings            246
1136604  1       Kolkata Knight Riders          245
335983   1       Chennai Super Kings            240
-------------------------------------------------------------------------------------

Q) FIND THE HIGHEST 5 INNINGS OF Royal Challengers Bangalore

a = df_p[df_p['batting_team'] == 'Royal Challengers Bangalore']          /* HERE YOU CAN REPLACE NAME OF TEAM AND GET SCORES FOR ANOTHER */
a.groupby(['id', 'inning'])['total_runs'].sum().sort_values(ascending = False)

598027   1         263
980987   1         248
829795   1         235
980907   1         227
829785   1         226
-------------------------------------------------------------------------------------

Q) FIND THE LIST OF ALL THE CENTURIES SCORED IN 2ND INNINGS

a = df_p[df_p['inning'] == 2]
b = a.groupby(['id', 'batsman','bowling_team'])['batsman_runs'].sum().sort_values(ascending = False)
b[b.values >= 100]

501206   PC Valthaty       Chennai Super Kings            120
501243   V Sehwag          Deccan Chargers                119
1136620  SR Watson         Sunrisers Hyderabad            117
336018   ST Jayasuriya     Chennai Super Kings            114
419139   DPMD Jayawardene  Kolkata Knight Riders          110
335994   AC Gilchrist      Mumbai Indians                 109
548329   DA Warner         Deccan Chargers                109
980921   Q de Kock         Royal Challengers Bangalore    108
980969   V Kohli           Rising Pune Supergiants        108
1216541  BA Stokes         Mumbai Indians                 107
548321   KP Pietersen      Deccan Chargers                103
1082629  BA Stokes         Gujarat Lions                  103
501222   CH Gayle          Kolkata Knight Riders          102
1216509  S Dhawan          Chennai Super Kings            101
598064   DA Miller         Royal Challengers Bangalore    101
734025   LMP Simmons       Kings XI Punjab                100
419107   YK Pathan         Mumbai Indians                 100
1136606  AT Rayudu         Sunrisers Hyderabad            100

-------------------------------------------------------------------------------------

Q) FIND THE NUMBER OF GAMES PLAYED BY EACH TEAM , FETCH THE 5 TEAMS WITH LEAST GAMES

df_p.groupby('batting_team')['id'].nunique().sort_values(ascending = False).tail(5)

Delhi Capitals             33
Gujarat Lions              30
Rising Pune Supergiant     16
Kochi Tuskers Kerala       14
Rising Pune Supergiants    14

-------------------------------------------------------------------------------------

Q) FIND TOP 5 HIGHEST SCORES MADE IN 2ND INNING

a = df_p[df_p['inning'] == 2]
a.groupby(['id','batting_team','bowling_team'])['total_runs'].sum().sort_values(ascending = False).head(5)

1216527  Rajasthan Royals  Kings XI Punjab        226
1082641  Mumbai Indians    Kings XI Punjab        223
419137   Rajasthan Royals  Chennai Super Kings    223
335990   Rajasthan Royals  Deccan Chargers        217
1082632  Delhi Daredevils  Gujarat Lions          214

--------------------------------------------------------------------------------------

Q) FIND THE  BATSMAN WHO HAVE GOT OUT BY STUMPED OUT

a = df_p[df_p['dismissal_kind'] == 'stumped']
a.value_counts('batsman').head()

SK Raina          8
AT Rayudu         7
RV Uthappa        7
AB de Villiers    6
F du Plessis      6

--------------------------------------------------------------------------------------

Q) BOWLER WHO HAVE TAKEN MAXIMUM WICKETS BY BOLD

a = df_p[df_p['dismissal_kind'] == 'stumped']
a[['bowler']].value_counts().head()

A Mishra            27
Harbhajan Singh     18
PP Chawla           16
YS Chahal           13
PP Ojha             12

--------------------------------------------------------------------------------------

Q) CREATE A STRUCTURE LIKE ID | RUNS FOR V KOHLI , SO THAT YOU CAN FURTHER ANALYZE IT

a = df_p[df_p['batsman'] == 'V Kohli']
b = a.groupby('id')['batsman_runs'].sum()
c = b.values
c.sum()                                    --- FOR TOTAL RUNS
c.shape[0]   -- total innings
c.max()
c.min()
c[c == 0]     --- innings where score = 0
len(c[c == 0])   --- total times his score was 0
b.descibe()     --- median and other things
--------------------------------------------------------------------------------------
Q) FIND THE DIFFERENCE BETWEEN FIRST INNING TOTAL RUNS AND SECOND INNING TOTAL RUNS OF V KOHLI

first = df_p[(df_p['batsman'] == 'V Kohli') & (df_p['inning'] == 1)]
second = df_p[(df_p['batsman'] == 'V Kohli') & (df_p['inning'] == 2)]
first['batsman_runs'].sum() - second['batsman_runs'].sum()

--------------------------------------------------------------------------------------

Q) WRITE A SCRIPT TO FIND THE IPL MATCHES WHERE MATVCH HAS EXACT 240 BALLS

a = df_p.groupby('id')['id'].count()
a[a.values == 240].count()

--------------------------------------------------------------------------------------

Q) WRITE A CODE TO FIND TOP 10 BATSMAN AND NUMBER OF MATCHES PLAYED BY THESE PLAYERS

matches = df_p.groupby(['batsman'])['id'].nunique()
runs = df_p.groupby(['batsman'])['batsman_runs'].sum()

new = pd.concat([matches,runs],axis=1)                                      /* joining 2 series */
a = new.sort_values(by = ['batsman_runs'] , ascending = [False]).head(10)
a

V Kohli	184	5878
SK Raina	189	5368
DA Warner	142	5254
RG Sharma	194	5230
S Dhawan	175	5197
AB de Villiers	156	4849
CH Gayle	131	4772
MS Dhoni	182	4632
RV Uthappa	182	4607
G Gambhir	151	4217

--------------------------------------------------------------------------------------


